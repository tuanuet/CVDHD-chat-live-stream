{"version":3,"sources":["../app.js"],"names":["express","require","compression","session","bodyParser","logger","chalk","errorHandler","lusca","dotenv","MongoStore","flash","path","mongoose","passport","expressValidator","expressStatusMonitor","sass","multer","upload","dest","join","__dirname","options","pingTimeout","pingInterval","transports","allowUpgrades","upgrade","cookie","load","homeController","userController","contactController","passportConfig","app","server","createServer","io","Promise","global","connect","process","env","MONGODB_URI","MONGOLAB_URI","connection","on","err","console","error","log","red","exit","set","OPENSHIFT_NODEJS_IP","PORT","OPENSHIFT_NODEJS_PORT","use","src","json","urlencoded","extended","resave","saveUninitialized","secret","SESSION_SECRET","store","url","autoReconnect","clear_interval","initialize","req","res","next","locals","user","match","returnTo","static","maxAge","isAuthenticated","get","index","getLogin","post","postLogin","logout","getForgot","postForgot","getReset","postReset","getSignup","postSignup","getContact","postContact","getAccount","postUpdateProfile","postUpdatePassword","postDeleteAccount","getOauthUnlink","listen","green","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Module dependencies.\n */\nconst express = require('express');\nconst compression = require('compression');\nconst session = require('express-session');\nconst bodyParser = require('body-parser');\nconst logger = require('morgan');\nconst chalk = require('chalk');\nconst errorHandler = require('errorhandler');\nconst lusca = require('lusca');\nconst dotenv = require('dotenv');\nconst MongoStore = require('connect-mongo')(session);\nconst flash = require('express-flash');\nconst path = require('path');\nconst mongoose = require('mongoose');\nconst passport = require('passport');\nconst expressValidator = require('express-validator');\nconst expressStatusMonitor = require('express-status-monitor');\nconst sass = require('node-sass-middleware');\nconst multer = require('multer');\n\nconst upload = multer({ dest: path.join(__dirname, 'uploads') });\n/**\n * event socket\n */\nimport socketEvent from './socketEvent.js'\nlet options = {\n    pingTimeout: 3000,\n    pingInterval: 3000,\n    transports: ['websocket'],\n    allowUpgrades: false,\n    upgrade: false,\n    cookie: false\n};\n/**\n * Load environment variables from .env file, where API keys and passwords are configured.\n */\ndotenv.load({ path: '.env.example' });\n\n/**\n * Controllers (route handlers).\n */\nconst homeController = require('./controllers/home');\nconst userController = require('./controllers/user');\nconst contactController = require('./controllers/contact');\n\n/**\n * API keys and Passport configuration.\n */\nconst passportConfig = require('./config/passport');\n\n/**\n * Create Express server.\n */\nconst app = express();\nvar server = require('http').createServer(app);\n/**\n * event socket\n */\nconst io = require('socket.io')(server,options);\nsocketEvent(io);\n\n/**\n * Connect to MongoDB.\n */\nmongoose.Promise = global.Promise;\nmongoose.connect(process.env.MONGODB_URI || process.env.MONGOLAB_URI);\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log('%s MongoDB connection error. Please make sure MongoDB is running.', chalk.red('âœ—'));\n  process.exit();\n});\n\n/**\n * Express configuration.\n */\napp.set('host', process.env.OPENSHIFT_NODEJS_IP || '0.0.0.0');\napp.set('port', process.env.PORT || process.env.OPENSHIFT_NODEJS_PORT || 8080);\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\napp.use(expressStatusMonitor());\napp.use(compression());\napp.use(sass({\n  src: path.join(__dirname, 'public'),\n  dest: path.join(__dirname, 'public')\n}));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(expressValidator());\napp.use(session({\n  resave: true,\n  saveUninitialized: true,\n  secret: process.env.SESSION_SECRET,\n  store: new MongoStore({\n    url: process.env.MONGODB_URI || process.env.MONGOLAB_URI,\n    autoReconnect: true,\n    clear_interval: 3600\n  })\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\napp.use((req, res, next) => {\n  res.locals.user = req.user;\n  req.io = io;\n  next();\n});\n\n\napp.use((req, res, next) => {\n  // After successful login, redirect back to the intended page\n  if (!req.user &&\n      req.path !== '/login' &&\n      req.path !== '/signup' &&\n      !req.path.match(/^\\/auth/) &&\n      !req.path.match(/\\./)) {\n    req.session.returnTo = req.path;\n  } else if (req.user &&\n      req.path === '/account') {\n    req.session.returnTo = req.path;\n  }\n  next();\n});\napp.use(express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\n//import router\nimport routerLiveStream from './router/livestream';\nimport routerLiveChat from './router/livechat';\n\napp.use('/livechat',passportConfig.isAuthenticated,routerLiveChat);\napp.use('/livestream',passportConfig.isAuthenticated,routerLiveStream);\n\n/**\n * Primary app routes.\n */\napp.get('/', homeController.index);\napp.get('/login', userController.getLogin);\napp.post('/login', userController.postLogin);\napp.get('/logout', userController.logout);\napp.get('/forgot', userController.getForgot);\napp.post('/forgot', userController.postForgot);\napp.get('/reset/:token', userController.getReset);\napp.post('/reset/:token', userController.postReset);\napp.get('/signup', userController.getSignup);\napp.post('/signup', userController.postSignup);\napp.get('/contact', contactController.getContact);\napp.post('/contact', contactController.postContact);\napp.get('/account', passportConfig.isAuthenticated, userController.getAccount);\napp.post('/account/profile', passportConfig.isAuthenticated, userController.postUpdateProfile);\napp.post('/account/password', passportConfig.isAuthenticated, userController.postUpdatePassword);\napp.post('/account/delete', passportConfig.isAuthenticated, userController.postDeleteAccount);\napp.get('/account/unlink/:provider', passportConfig.isAuthenticated, userController.getOauthUnlink);\n\n/**\n * Error Handler.\n */\napp.use(errorHandler());\n\n/**\n * Start Express server.\n */\nserver.listen(app.get('port'), () => {\n  console.log('%s App is running at http://localhost:%d in %s mode', chalk.green('âœ“'), app.get('port'), app.get('env'));\n  console.log('  Press CTRL-C to stop\\n');\n});\n\n\n\nmodule.exports = app;\n"]}