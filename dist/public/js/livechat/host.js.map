{"version":3,"sources":["../../../../public/js/livechat/host.js"],"names":["socket","io","openStream","config","audio","video","navigator","mediaDevices","getUserMedia","playStream","idVideoTag","stream","document","getElementById","srcObject","play","peer","Peer","key","host","secure","port","on","emit","roomId","window","DATA_RENDER","idPeer","id","ack","console","log","then","createVideo","call","remoteStream","removeVideo","answer","size","$","append","remove"],"mappings":";;AAAA,IAAMA,SAASC,GAAG,WAAH,CAAf;AACA,SAASC,UAAT,GAAqB;AACnB,MAAMC,SAAS,EAAEC,OAAO,IAAT,EAAeC,OAAO,IAAtB,EAAf;AACA,SAAOC,UAAUC,YAAV,CAAuBC,YAAvB,CAAoCL,MAApC,CAAP;AACD;;AAED,SAASM,UAAT,CAAoBC,UAApB,EAAgCC,MAAhC,EAAuC;AACnC,MAAMN,QAAQO,SAASC,cAAT,CAAwBH,UAAxB,CAAd;AACAL,QAAMS,SAAN,GAAkBH,MAAlB;AACAN,QAAMU,IAAN;AACH;AACD,IAAMC,OAAO,IAAIC,IAAJ,CAAS,EAACC,KAAK,QAAN,EAAgBC,MAAM,mCAAtB,EAA2DC,QAAQ,IAAnE,EAA0EC,MAAK,GAA/E,EAAT,CAAb;AACAL,KAAKM,EAAL,CAAQ,MAAR,EAAgB,cAAK;AAClBtB,SAAOuB,IAAP,CAAY,MAAZ,EAAmB,EAACC,QAASC,OAAOC,WAAP,CAAmBF,MAA7B,EAAoCG,QAASC,EAA7C,EAAnB,EAAoE,UAAUC,GAAV,EAAe;AACjFC,YAAQC,GAAR,CAAY,OAAZ,EAAoBH,EAApB;AACD,GAFD;AAGD,CAJF;AAKA1B,aAAa8B,IAAb,CAAkB,kBAAS;AACzBC,cAAY,aAAZ,EAA0B,GAA1B;AACAxB,aAAW,aAAX,EAAyBE,MAAzB;;AAEAX,SAAOsB,EAAP,CAAU,sBAAV,EAAiC,UAAUK,MAAV,EAAkB;AACjD,QAAMO,OAAOlB,KAAKkB,IAAL,CAAUP,MAAV,EAAkBhB,MAAlB,CAAb;AACAsB,gBAAYN,MAAZ,EAAmB,GAAnB;AACAO,SAAKZ,EAAL,CAAQ,QAAR,EAAkB;AAAA,aAAgBb,WAAWkB,MAAX,EAAmBQ,YAAnB,CAAhB;AAAA,KAAlB;AACD,GAJD;AAKD,CATD;;AAWAnC,OAAOsB,EAAP,CAAU,kBAAV,EAA6B,UAAUK,MAAV,EAAkB;AAC7CS,cAAYT,MAAZ;AACD,CAFD;;AAIAX,KAAKM,EAAL,CAAQ,MAAR,EAAgB,gBAAQ;AACtBpB,eAAa8B,IAAb,CAAmB,kBAAU;AAC3BE,SAAKG,MAAL,CAAY1B,MAAZ;AACAsB,gBAAYC,KAAKlB,IAAjB,EAAsB,GAAtB;AACAkB,SAAKZ,EAAL,CAAQ,QAAR,EAAkB,UAACa,YAAD;AAAA,aAAkB1B,WAAWyB,KAAKlB,IAAhB,EAAqBmB,YAArB,CAAlB;AAAA,KAAlB;AACD,GAJD;AAKD,CAND;;AAQA,IAAIF,cAAc,SAAdA,WAAc,CAACL,EAAD,EAAIU,IAAJ,EAAa;AAC7BC,IAAE,WAAF,EAAeC,MAAf,gBAAmCZ,EAAnC,yBAAyDU,IAAzD;AACD,CAFD;AAGA,IAAIF,cAAc,SAAdA,WAAc,CAACR,EAAD,EAAQ;AACxBW,UAAMX,EAAN,EAAYa,MAAZ;AACD,CAFD","file":"host.js","sourcesContent":["const socket = io('/livechat');\nfunction openStream(){\n  const config = { audio: true, video: true};\n  return navigator.mediaDevices.getUserMedia(config);\n}\n\nfunction playStream(idVideoTag, stream){\n    const video = document.getElementById(idVideoTag);\n    video.srcObject = stream;\n    video.play();\n}\nconst peer = new Peer({key: 'peerjs', host: 'uet-video-call-peer.herokuapp.com', secure: true,  port:443})\npeer.on('open', id =>{\n   socket.emit('join',{roomId : window.DATA_RENDER.roomId,idPeer : id},function (ack) {\n     console.log('MyId:',id)\n   })\n });\nopenStream().then(stream =>{\n  createVideo('localStream',400);\n  playStream('localStream',stream)\n\n  socket.on('new-member-join-room',function (idPeer) {\n    const call = peer.call(idPeer, stream);\n    createVideo(idPeer,200);\n    call.on('stream', remoteStream => playStream(idPeer, remoteStream));\n  })\n});\n\nsocket.on('member-quit-room',function (idPeer) {\n  removeVideo(idPeer);\n})\n\npeer.on('call', call => {\n  openStream().then( stream => {\n    call.answer(stream);\n    createVideo(call.peer,200)\n    call.on('stream', (remoteStream) => playStream(call.peer,remoteStream));\n  });\n});\n\nlet createVideo = (id,size) => {\n  $('#div-chat').append(`<video id=${id} controls width=\"${size}\"></video>`)\n}\nlet removeVideo = (id) => {\n  $(`#${id}`).remove()\n}\n"]}