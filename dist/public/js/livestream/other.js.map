{"version":3,"sources":["../../../../public/js/livestream/other.js"],"names":["$","video","document","querySelector","assetURL","window","DATA_RENDER","roomId","mimeCodec","MediaSource","isTypeSupported","mediaSource","src","URL","createObjectURL","addEventListener","sourceOpen","console","error","_","log","readyState","sourceBuffer","addSourceBuffer","count","sourceBuffers","timestampOffset","fetchAB","buf","play","appendBuffer","url","cb","xhr","XMLHttpRequest","open","responseType","onload","response","send"],"mappings":";;AAEAA,EAAE,YAAW;;AAET,QAAIC,QAAQC,SAASC,aAAT,CAAuB,OAAvB,CAAZ;;AAEA,QAAIC,WAAW,sBAAoBC,OAAOC,WAAP,CAAmBC,MAAvC,GAA8C,UAA7D;;AAEA,QAAIC,YAAY,kCAAhB;;AAEA,QAAI,iBAAiBH,MAAjB,IAA2BI,YAAYC,eAAZ,CAA4BF,SAA5B,CAA/B,EAAuE;AACnE,YAAIG,cAAc,IAAIF,WAAJ,EAAlB;AACAR,cAAMW,GAAN,GAAYC,IAAIC,eAAJ,CAAoBH,WAApB,CAAZ;AACAA,oBAAYI,gBAAZ,CAA6B,YAA7B,EAA2CC,UAA3C,EAAuD,KAAvD;AACH,KAJD,MAIO;AACHC,gBAAQC,KAAR,CAAc,kCAAd,EAAkDV,SAAlD;AACH;;AAED,aAASQ,UAAT,CAAqBG,CAArB,EAAwB;AACpB,YAAIR,cAAc,IAAlB;AACAM,gBAAQG,GAAR,CAAYT,YAAYU,UAAxB;AACA,YAAIC,eAAeX,YAAYY,eAAZ,CAA4Bf,SAA5B,CAAnB;AACAS,gBAAQG,GAAR,CAAYT,WAAZ;AACA,YAAIa,QAAQ,CAAZ;AACAF,qBAAaP,gBAAb,CAA8B,WAA9B,EAA2C,UAAUI,CAAV,EAAa;AACpDK;AACAP,oBAAQG,GAAR,CAAYT,YAAYc,aAAxB;AACAd,wBAAYc,aAAZ,CAA0B,CAA1B,EAA6BC,eAA7B,GAA+C,IAAEF,KAAjD;AACH,SAJD,EAIE,KAJF;;AAMAG,gBAAQvB,QAAR,EAAkB,UAAUwB,GAAV,EAAe;AAC7B3B,kBAAM4B,IAAN;AACAZ,oBAAQG,GAAR,CAAYQ,GAAZ;AACAjB,wBAAYc,aAAZ,CAA0B,CAA1B,EAA6BK,YAA7B,CAA0CF,GAA1C;AACH,SAJD;AAKH;;AAED,aAASD,OAAT,CAAkBI,GAAlB,EAAuBC,EAAvB,EAA2B;AACvBf,gBAAQG,GAAR,CAAYW,GAAZ;AACA,YAAIE,MAAM,IAAIC,cAAJ,EAAV;AACAD,YAAIE,IAAJ,CAAS,KAAT,EAAgBJ,GAAhB;AACAE,YAAIG,YAAJ,GAAmB,aAAnB;AACAH,YAAII,MAAJ,GAAa,YAAY;AACrBL,eAAGC,IAAIK,QAAP;AACH,SAFD;AAGAL,YAAIM,IAAJ;AACH;AACJ,CA7CD","file":"other.js","sourcesContent":["\n\n$(function() {\n\n    var video = document.querySelector('video');\n\n    var assetURL = '/livestream/room/'+window.DATA_RENDER.roomId+'/segment';\n\n    var mimeCodec = 'video/webm; codecs=\"vp8, vorbis\"';\n\n    if ('MediaSource' in window && MediaSource.isTypeSupported(mimeCodec)) {\n        var mediaSource = new MediaSource;\n        video.src = URL.createObjectURL(mediaSource);\n        mediaSource.addEventListener('sourceopen', sourceOpen, false);\n    } else {\n        console.error('Unsupported MIME type or codec: ', mimeCodec);\n    }\n\n    function sourceOpen (_) {\n        let mediaSource = this;\n        console.log(mediaSource.readyState);\n        var sourceBuffer = mediaSource.addSourceBuffer(mimeCodec);\n        console.log(mediaSource);\n        var count = 0;\n        sourceBuffer.addEventListener('updateend', function (_) {\n            count++;\n            console.log(mediaSource.sourceBuffers);\n            mediaSource.sourceBuffers[0].timestampOffset = 3*count;\n        },false);\n\n        fetchAB(assetURL, function (buf) {\n            video.play();\n            console.log(buf)\n            mediaSource.sourceBuffers[0].appendBuffer(buf);\n        });\n    };\n\n    function fetchAB (url, cb) {\n        console.log(url);\n        var xhr = new XMLHttpRequest;\n        xhr.open('get', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.onload = function () {\n            cb(xhr.response);\n        };\n        xhr.send();\n    }\n});\n"]}