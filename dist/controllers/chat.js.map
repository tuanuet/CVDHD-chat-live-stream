{"version":3,"sources":["../../controllers/chat.js"],"names":["TypeRoom","getLiveChat","req","res","render","getCreateLiveChat","postCreateLiveChat","newRoom","name","body","roomName","description","roomDescription","hostId","user","id","type","LIVECHAT","save","err","room","console","log","message","redirect","getLiveChatOnline","roomId","params","getLiveStream","io","rooms","of","adapter","keyRooms","Object","keys","promises","filter","key","startsWith","map","findRoomAndUser","email","value","Promise","all","data","getCreateLiveStream","postCreateLiveStream","LIVESTREAM","getLiveStreamOnline","compareHost","isHost"],"mappings":"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","file":"chat.js","sourcesContent":["import Room from '../models/Room';\nimport * as TypeRoom from '../constants/TypeRoom';\nimport _ from 'lodash';\n\nexport const getLiveChat = (req, res) => {\n  res.render('livechat');\n};\n\n\nexport const getCreateLiveChat = (req, res) => {\n  res.render('livechat/create');\n};\n\nexport const postCreateLiveChat = (req, res) => {\n  const newRoom = new Room({\n    name: req.body.roomName,\n    description: req.body.roomDescription,\n    hostId: req.user.id,\n    type: TypeRoom.LIVECHAT,\n  });\n  newRoom.save((err, room) => {\n    if (err) {\n      console.log(err.message);\n      return;\n    }\n\n    res.redirect(`/livechat/room/${room.id}`);\n  });\n};\n\n\n/**\n  * Dungf chung cho 2 route người xem va nguoi host\n  */\nexport const getLiveChatOnline = async (req, res) => {\n  const roomId = req.params.roomId;\n  const user = req.user;\n\n  return res.render('livechat/other');\n};\n\n//= ==============================================\nexport const getLiveStream = async (req, res) => {\n  const io = req.io;\n  const rooms = io.of('/livestream').adapter.rooms;\n  const keyRooms = Object.keys(rooms);\n  const promises = _(keyRooms)\n    .filter(key => !_(key).startsWith('/livestream'))\n    .map(async (roomId) => {\n      const room = await Room.findRoomAndUser(roomId);\n      return {\n        roomId,\n        email: room.hostId.email,\n        roomName: room.name,\n        description: room.description\n      };\n    })\n    .value();\n  const data = await Promise.all(promises);\n\n  console.log('room ID:', data);\n  res.render('livestream', { data });\n};\n\n\nexport const getCreateLiveStream = (req, res) => {\n  res.render('livestream/create');\n};\n\n\nexport const postCreateLiveStream = (req, res) => {\n  const newRoom = new Room({\n    name: req.body.roomName,\n    description: req.body.roomDescription,\n    hostId: req.user.id,\n    type: TypeRoom.LIVESTREAM,\n  });\n  newRoom.save((err, room) => {\n    if (err) {\n      console.log(err.message);\n      return;\n    }\n\n    res.redirect(`/livestream/room/${room.id}`);\n  });\n};\n\n/**\n  * Dungf chung cho 2 route người xem va nguoi host\n  */\nexport const getLiveStreamOnline = async (req, res) => {\n  const roomId = req.params.roomId;\n  const user = req.user;\n  console.log(user);\n  // todo: checkdb that user is host ?\n  // if host => render livechat/host\n  // else render livechat/other\n  const isHost = await Room.compareHost(user.id, roomId, TypeRoom.LIVESTREAM);\n\n  if (isHost) {\n    return res.render('livestream/host', { roomId, user });\n  }\n  return res.render('livestream/other', { roomId, user });\n};\n"]}